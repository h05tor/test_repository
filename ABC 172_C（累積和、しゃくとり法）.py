"""
二台の机 A, B があります。机AにはN冊の本が、机BにはM冊の本が、それぞれ縦に積まれています。

机 A に現在上からi番目に積まれている本(1≤i≤N)は読むのに Ai分を要し、
机 B に現在上からi番目に積まれている本(1≤i≤M)は読むのにBi分を要します。
次の行為を考えます。

本が残っている机を選び、その机の最も上に積まれた本を読んで机から取り除く。
合計所要時間がK分を超えないようにこの行為を繰り返すとき、最大で何冊の本を読むことができるでしょうか。本を読むこと以外に要する時間は無視します。

制約
1≤N,M≤200000
1≤K≤10^9
1≤Ai,Bi≤10^9
入力中の値はすべて整数である。

入力は以下の形式で標準入力から与えられる。

N M K
A1 A2 … AN
B1 B2 … BM

出力
読むことのできる本の最大数を表す整数を出力せよ。

入力例
3 4 240
60 90 120
80 150 80 150
出力例
3
この場合、机Aの上から1,2,3番目の本はそれぞれ読むのに60分、90分、120分を要し、
机Bの上から1,2,3,4番目の本はそれぞれ読むのに80分、150分、80分、150分を要します。

以下のようにすることで 230分で3冊の本を読むことができ、これが240分以内に読むことのできる本の最大数です。

机Aの最も上に積まれている本を60分かけて読み、この本を机から取り除く。
机Bの最も上に積まれている本を80分かけて読み、この本を机から取り除く。
机Aの最も上に積まれている本を90分かけて読み、この本を机から取り除く。

"""
#dequeでAとBの一番上にある本のうち数字が小さい方を取っていくのはNG
#A=[5,1,1,1,1] B=[4,4,4,4,4],K=10 のように先頭に大きい数字があるが、そのあとに小さい数字が続いているパターンもあるため

#まず、Aを0冊、BをM冊全部読む場合を考え、このときの合計時間を記録する。
#Kに収まらなければKに収まるまでBを1冊ずつ減らしていく（while）
#Bの冊数jを記録しておき、Aの冊数を1ずつ足す（for）
#各Aの数ごとにKに収まるまで記録しておいたjから引いていく
#最大のi+jが解答
#whileループ内の合計計算量はfor文（計算量N）全体でも最大でMなので
#計算量はN+Mになる

#これのこと「しゃくとり法」っていいうらしい

n,m,k=map(int,input().split())
a=list(map(int,input().split()))
b=list(map(int,input().split()))
A=[0]#Aからi冊読んだ場合の合計時間のリスト
B=[0]#Bからj冊読んだ場合の合計時間のリスト
x=0
y=0
for i in range(len(a)):
    x+=a[i]
    A.append(x)
for i in range(len(b)):
    y+=b[i]
    B.append(y)
print(A,B)
ans=0
j=m
for i in range(n+1):
    if A[i]>k:
        break
    while A[i]+B[j]>k:
        j-=1
    ans=max(ans,i+j)
    #print(ans,i,j)
print(ans)